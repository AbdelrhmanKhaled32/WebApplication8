// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using book.Data;

#nullable disable

namespace WebApplication8.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241119064817_abdooooo")]
    partial class abdooooo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.Property<int>("authorId_author_")
                        .HasColumnType("int");

                    b.Property<int>("booksId")
                        .HasColumnType("int");

                    b.HasKey("authorId_author_", "booksId");

                    b.HasIndex("booksId");

                    b.ToTable("AuthorBook");
                });

            modelBuilder.Entity("book.Models.Author", b =>
                {
                    b.Property<int>("Id_author_")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_author_"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_author_");

                    b.ToTable("Author");
                });

            modelBuilder.Entity("book.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("publishyear")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("book.Models.Cradit_Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("authorId_author_")
                        .HasColumnType("int");

                    b.Property<int>("id_author")
                        .HasColumnType("int");

                    b.Property<int>("number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("authorId_author_");

                    b.ToTable("cards");
                });

            modelBuilder.Entity("book.Models.NationalID", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("author_id")
                        .HasColumnType("int");

                    b.Property<int>("number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("author_id")
                        .IsUnique();

                    b.ToTable("nationalIDs");
                });

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.HasOne("book.Models.Author", null)
                        .WithMany()
                        .HasForeignKey("authorId_author_")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("book.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("booksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("book.Models.Cradit_Card", b =>
                {
                    b.HasOne("book.Models.Author", "author")
                        .WithMany("cradits")
                        .HasForeignKey("authorId_author_");

                    b.Navigation("author");
                });

            modelBuilder.Entity("book.Models.NationalID", b =>
                {
                    b.HasOne("book.Models.Author", "author")
                        .WithOne("nationalID")
                        .HasForeignKey("book.Models.NationalID", "author_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("author");
                });

            modelBuilder.Entity("book.Models.Author", b =>
                {
                    b.Navigation("cradits");

                    b.Navigation("nationalID");
                });
#pragma warning restore 612, 618
        }
    }
}
